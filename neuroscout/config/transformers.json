{
  "converters": [
    [[{"transformer": "TesseractConverter"}],
    [{"transformer": "FrameSamplingFilter", "parameters": {"hertz": 1}}],
    [{"transformer": "VideoToAudioConverter"}]]
  ],
  "extractors": [
    [{"transformer": "FarnebackOpticalFlowExtractor"}],
    [{"transformer": "WordEmbeddingExtractor", "parameters": {"embedding_file": "/datasets/other/glove.6B.300d.txt.word2vec", "binary": false}}],
    [{"transformer": "BrightnessExtractor"}],
    [{"transformer": "VibranceExtractor"}],
    [{"transformer": "SharpnessExtractor"}],
    [{"transformer": "GoogleVisionAPIFaceExtractor"}],
    [{"transformer": "GoogleVisionAPILabelExtractor"}],
    [{"transformer": "GoogleVisionAPIPropertyExtractor"}],
    [{"transformer": "GoogleVideoAPIShotDetectionExtractor", "parameters": {"timeout": 100000}}],
    [{"transformer": "GoogleVisionAPISafeSearchExtractor"}],
    [{"transformer": "ClarifaiAPIImageExtractor", "parameters": {"model": "general-v1.3", "select_concepts": ["alphabet", "portrait", "dark", "daylight", "creativity", "animal", "face", "wild", "abstract", "sky", "room", "vertical", "text", "business", "vehicle", "wear", "horizontal", "man", "furniture", "old", "home", "two", "nature", "image", "family", "building", "empty", "road", "design", "woman", "girl", "landscape", "hand", "fashion", "equipment", "child", "art", "sunset", "music", "summer", "light", "wildlife", "competition", "simplicity", "architecture", "desktop", "retro", "technology", "street", "indoors", "adult", "outdoors", "recreation", "military", "color", "blur", "wood", "writing", "illustration", "travel", "one", "car", "action", "pattern", "water", "city", "people"]}}],
    [{"transformer": "ClarifaiAPIImageExtractor", "parameters": {"model": "nsfw-v1.0"}}],
    [{"transformer": "STFTAudioExtractor"}],
    [{"transformer": "MeanAmplitudeExtractor"}],
    [{"transformer": "SpectralCentroidExtractor"}],
    [{"transformer": "VADERSentimentExtractor"}],
    [{"transformer": "RMSExtractor", "parameters": {"center": false}}],
    [{"transformer": "TonnetzExtractor"}],
    [{"transformer": "ComplexTextExtractor"}],
    [{"transformer": "ChromaSTFTExtractor"}],
    [{"transformer": "ChromaCQTExtractor"}],
    [{"transformer": "MFCCExtractor"}],
    [{"transformer": "MelspectrogramExtractor", "parameters": {"n_mels":64, "f_max":8000, "f_min": 20}}],
    [{"transformer": "PredefinedDictionaryExtractor", "parameters": {"variables": {"subtlexusfrequency": ["FREQcount", "CDcount", "FREQlow", "Cdlow", "SUBTLWF", "Lg10WF", "SUBTLCD", "Lg10CD", "Dom_PoS_SUBTLEX", "Freq_dom_PoS_SUBTLEX", "Percentage_dom_PoS", "All_PoS_SUBTLEX", "All_freqs_SUBTLEX", "Zipf-value"]}, "missing": "n/a"}}],
    [{"transformer": "PredefinedDictionaryExtractor", "parameters": {"variables": {"affect": ["V.Mean.Sum", "A.Mean.Sum", "D.Mean.Sum"], "aoa": ["AoA_Kup"], "concreteness": ["Conc.M"], "massiveauditorylexicaldecision": ["FreqCOCAspok", "NumSylls", "NumPhones", "Duration", "PhonLev"]}, "missing": "n/a"}}],
    [{"transformer": "PredefinedDictionaryExtractor", "parameters": {"variables": {"lancastersensorimotornorms": ["Auditory.mean", "Gustatory.mean", "Haptic.mean", "Interoceptive.mean", "Olfactory.mean", "Visual.mean", "Foot_leg.mean", "Hand_arm.mean", "Head.mean", "Mouth.mean", "Torso.mean"]}, "missing": "n/a"}}],
    [{"transformer": "LengthExtractor"}],
    [{"transformer": "FundamentalFrequencyExtractor"}],
    [{"transformer": "AudiosetLabelExtractor", "parameters": {"labels": ["Whistling", "Heart sounds, heartbeat", "Wild animals", "Vehicle", "Fire", "Silence", "Domestic animals, pets", "Livestock, farm animals, working animals", "Alarm", "Tools", "Explosion", "Thunderstorm", "Engine", "Noise", "Water", "Wind", "Glass", "Animal", "Liquid", "Wood", "Mechanisms", "Musical instrument", "Hands", "Music"]}}]
  ],
  "tokenized_extractors": [
    [
      [{"transformer": "BertLMExtractor"}], {"window": "pre", "n": 25}
    ],
    [
      [{"transformer": "BertLMExtractor"}], {"window": "pre", "n": 25}
    ],
    [
      [{"transformer": "WordCounterExtractor"}], {"window": "transcript"}
    ],
    [
      [{"transformer": "GPTForwardLMExtractor", "parameters": {"top_n": 1000, "return_softmax": true, "return_true_word": false, "return_true_token": false, "return_context": false, "return_input": false, "onset": "last_context"}, 
        "children": [{"transformer": "MetricExtractor", "parameters": {"functions": "scipy.stats.entropy", "var_names": ["gpt_entropy"]}}]}],
      {"window": "pre", "n": 25}
    ],
    [
      [{"transformer": "GPTForwardLMExtractor", "parameters": {"top_n": 1, "return_softmax": true, "return_true_word": true, "return_true_token": true, "return_context": true, "return_input": true, "onset": "target"}, "children": [
        {"transformer": "MetricExtractor", "parameters": {"subset_idx": ["true_word_score"], "functions": "lambda x: -np.log(x.values.astype(float))[0] if not x.isna()[0] else 'n/a'", "var_names": ["gpt_surprisal"]}}]}],
      {"window": "pre", "n": 25}
    ],
    [
      [{"transformer": "BertLMExtractor", "parameters": {"mask": 24, "top_n": 100, "return_softmax": true}, 
        "children": [{"transformer": "MetricExtractor", "parameters": {"functions": "scipy.stats.entropy"}}]}],
      {"window": "pre", "n": 25}
    ],
    [
      [{"transformer": "BertLMExtractor", "parameters": {"mask": 24, "top_n": 100, "return_softmax": true, "return_masked_word": true}, "children": [
        {"transformer": "MetricExtractor", "parameters": {"subset_idx": ["true_word_score"], "functions": "lambda x: -np.log(x.values.astype(float))[0] if not x.isna()[0] else 'n/a'", "var_names": ["surprisal"]}}]}],
      {"window": "pre", "n": 25}
    ]
  ],
  "transformations":[
    {
      "function": "num_objects",
      "new_name": "num_faces",
      "feature_name": "face_detectionConfidence"
    },
    {
      "function": "dummy",
      "new_name": "speech",
      "extractor_name": "ComplexTextExtractor"
    },
    {
      "function": "dummy",
      "new_name": "reading",
      "extractor_name": "ComplexTextExtractor"
    },
    {
      "function": "dummy_value",
      "new_name": "shot_change",
      "extractor_name": "GoogleVideoAPIShotDetectionExtractor",
      "feature_name": "shot_id"
    },
    {
      "function": "num_objects",
      "func_args": {"threshold": 0.07},
      "new_name": "num_colors_0_07",
      "extractor_name": "GoogleVisionAPIPropertyExtractor"
    }
  ]
}
